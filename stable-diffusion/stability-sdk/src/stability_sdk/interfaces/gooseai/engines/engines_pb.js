// source: engines.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

<<<<<<< HEAD
var jspb = require("google-protobuf");
var goog = jspb;
var global = function () {
  if (this) {
    return this;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return Function("return this")();
}.call(null);

goog.exportSymbol("proto.gooseai.EngineInfo", null, global);
goog.exportSymbol("proto.gooseai.EngineTokenizer", null, global);
goog.exportSymbol("proto.gooseai.EngineType", null, global);
goog.exportSymbol("proto.gooseai.Engines", null, global);
goog.exportSymbol("proto.gooseai.ListEnginesRequest", null, global);
=======
var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.gooseai.EngineInfo', null, global);
goog.exportSymbol('proto.gooseai.EngineTokenizer', null, global);
goog.exportSymbol('proto.gooseai.EngineType', null, global);
goog.exportSymbol('proto.gooseai.Engines', null, global);
goog.exportSymbol('proto.gooseai.ListEnginesRequest', null, global);
>>>>>>> 917d866 (test)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo = function (opt_data) {
=======
proto.gooseai.EngineInfo = function(opt_data) {
>>>>>>> 917d866 (test)
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gooseai.EngineInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
<<<<<<< HEAD
  proto.gooseai.EngineInfo.displayName = "proto.gooseai.EngineInfo";
=======
  proto.gooseai.EngineInfo.displayName = 'proto.gooseai.EngineInfo';
>>>>>>> 917d866 (test)
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.gooseai.ListEnginesRequest = function (opt_data) {
=======
proto.gooseai.ListEnginesRequest = function(opt_data) {
>>>>>>> 917d866 (test)
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gooseai.ListEnginesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
<<<<<<< HEAD
  proto.gooseai.ListEnginesRequest.displayName =
    "proto.gooseai.ListEnginesRequest";
=======
  proto.gooseai.ListEnginesRequest.displayName = 'proto.gooseai.ListEnginesRequest';
>>>>>>> 917d866 (test)
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.gooseai.Engines = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.gooseai.Engines.repeatedFields_,
    null
  );
=======
proto.gooseai.Engines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gooseai.Engines.repeatedFields_, null);
>>>>>>> 917d866 (test)
};
goog.inherits(proto.gooseai.Engines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
<<<<<<< HEAD
  proto.gooseai.Engines.displayName = "proto.gooseai.Engines";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.gooseai.EngineInfo.prototype.toObject = function (opt_includeInstance) {
    return proto.gooseai.EngineInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.gooseai.EngineInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.gooseai.EngineInfo.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
        owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
        ready: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        type: jspb.Message.getFieldWithDefault(msg, 4, 0),
        tokenizer: jspb.Message.getFieldWithDefault(msg, 5, 0),
        name: jspb.Message.getFieldWithDefault(msg, 6, ""),
        description: jspb.Message.getFieldWithDefault(msg, 7, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

=======
  proto.gooseai.Engines.displayName = 'proto.gooseai.Engines';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gooseai.EngineInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gooseai.EngineInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gooseai.EngineInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gooseai.EngineInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ready: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tokenizer: jspb.Message.getFieldWithDefault(msg, 5, 0),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> 917d866 (test)
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gooseai.EngineInfo}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.EngineInfo();
  return proto.gooseai.EngineInfo.deserializeBinaryFromReader(msg, reader);
};

=======
proto.gooseai.EngineInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.EngineInfo;
  return proto.gooseai.EngineInfo.deserializeBinaryFromReader(msg, reader);
};


>>>>>>> 917d866 (test)
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gooseai.EngineInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gooseai.EngineInfo}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.deserializeBinaryFromReader = function (msg, reader) {
=======
proto.gooseai.EngineInfo.deserializeBinaryFromReader = function(msg, reader) {
>>>>>>> 917d866 (test)
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
<<<<<<< HEAD
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwner(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setReady(value);
        break;
      case 4:
        var value = /** @type {!proto.gooseai.EngineType} */ (
          reader.readEnum()
        );
        msg.setType(value);
        break;
      case 5:
        var value = /** @type {!proto.gooseai.EngineTokenizer} */ (
          reader.readEnum()
        );
        msg.setTokenizer(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
=======
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReady(value);
      break;
    case 4:
      var value = /** @type {!proto.gooseai.EngineType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {!proto.gooseai.EngineTokenizer} */ (reader.readEnum());
      msg.setTokenizer(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
>>>>>>> 917d866 (test)
    }
  }
  return msg;
};

<<<<<<< HEAD
=======

>>>>>>> 917d866 (test)
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.serializeBinary = function () {
=======
proto.gooseai.EngineInfo.prototype.serializeBinary = function() {
>>>>>>> 917d866 (test)
  var writer = new jspb.BinaryWriter();
  proto.gooseai.EngineInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

<<<<<<< HEAD
=======

>>>>>>> 917d866 (test)
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gooseai.EngineInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getReady();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getTokenizer();
  if (f !== 0.0) {
    writer.writeEnum(5, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

=======
proto.gooseai.EngineInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReady();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getTokenizer();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


>>>>>>> 917d866 (test)
/**
 * optional string id = 1;
 * @return {string}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

=======
proto.gooseai.EngineInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


>>>>>>> 917d866 (test)
/**
 * @param {string} value
 * @return {!proto.gooseai.EngineInfo} returns this
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

=======
proto.gooseai.EngineInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


>>>>>>> 917d866 (test)
/**
 * optional string owner = 2;
 * @return {string}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.getOwner = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

=======
proto.gooseai.EngineInfo.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


>>>>>>> 917d866 (test)
/**
 * @param {string} value
 * @return {!proto.gooseai.EngineInfo} returns this
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.setOwner = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

=======
proto.gooseai.EngineInfo.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


>>>>>>> 917d866 (test)
/**
 * optional bool ready = 3;
 * @return {boolean}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.getReady = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

=======
proto.gooseai.EngineInfo.prototype.getReady = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


>>>>>>> 917d866 (test)
/**
 * @param {boolean} value
 * @return {!proto.gooseai.EngineInfo} returns this
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.setReady = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

=======
proto.gooseai.EngineInfo.prototype.setReady = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


>>>>>>> 917d866 (test)
/**
 * optional EngineType type = 4;
 * @return {!proto.gooseai.EngineType}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.getType = function () {
  return /** @type {!proto.gooseai.EngineType} */ (
    jspb.Message.getFieldWithDefault(this, 4, 0)
  );
};

=======
proto.gooseai.EngineInfo.prototype.getType = function() {
  return /** @type {!proto.gooseai.EngineType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


>>>>>>> 917d866 (test)
/**
 * @param {!proto.gooseai.EngineType} value
 * @return {!proto.gooseai.EngineInfo} returns this
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

=======
proto.gooseai.EngineInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


>>>>>>> 917d866 (test)
/**
 * optional EngineTokenizer tokenizer = 5;
 * @return {!proto.gooseai.EngineTokenizer}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.getTokenizer = function () {
  return /** @type {!proto.gooseai.EngineTokenizer} */ (
    jspb.Message.getFieldWithDefault(this, 5, 0)
  );
};

=======
proto.gooseai.EngineInfo.prototype.getTokenizer = function() {
  return /** @type {!proto.gooseai.EngineTokenizer} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


>>>>>>> 917d866 (test)
/**
 * @param {!proto.gooseai.EngineTokenizer} value
 * @return {!proto.gooseai.EngineInfo} returns this
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.setTokenizer = function (value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};

=======
proto.gooseai.EngineInfo.prototype.setTokenizer = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


>>>>>>> 917d866 (test)
/**
 * optional string name = 6;
 * @return {string}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};

=======
proto.gooseai.EngineInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


>>>>>>> 917d866 (test)
/**
 * @param {string} value
 * @return {!proto.gooseai.EngineInfo} returns this
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

=======
proto.gooseai.EngineInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


>>>>>>> 917d866 (test)
/**
 * optional string description = 7;
 * @return {string}
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};

=======
proto.gooseai.EngineInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


>>>>>>> 917d866 (test)
/**
 * @param {string} value
 * @return {!proto.gooseai.EngineInfo} returns this
 */
<<<<<<< HEAD
proto.gooseai.EngineInfo.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.gooseai.ListEnginesRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.gooseai.ListEnginesRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.gooseai.ListEnginesRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.gooseai.ListEnginesRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

=======
proto.gooseai.EngineInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gooseai.ListEnginesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gooseai.ListEnginesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gooseai.ListEnginesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gooseai.ListEnginesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> 917d866 (test)
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gooseai.ListEnginesRequest}
 */
<<<<<<< HEAD
proto.gooseai.ListEnginesRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.ListEnginesRequest();
  return proto.gooseai.ListEnginesRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

=======
proto.gooseai.ListEnginesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.ListEnginesRequest;
  return proto.gooseai.ListEnginesRequest.deserializeBinaryFromReader(msg, reader);
};


>>>>>>> 917d866 (test)
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gooseai.ListEnginesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gooseai.ListEnginesRequest}
 */
<<<<<<< HEAD
proto.gooseai.ListEnginesRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
=======
proto.gooseai.ListEnginesRequest.deserializeBinaryFromReader = function(msg, reader) {
>>>>>>> 917d866 (test)
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
<<<<<<< HEAD
      default:
        reader.skipField();
        break;
=======
    default:
      reader.skipField();
      break;
>>>>>>> 917d866 (test)
    }
  }
  return msg;
};

<<<<<<< HEAD
=======

>>>>>>> 917d866 (test)
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.gooseai.ListEnginesRequest.prototype.serializeBinary = function () {
=======
proto.gooseai.ListEnginesRequest.prototype.serializeBinary = function() {
>>>>>>> 917d866 (test)
  var writer = new jspb.BinaryWriter();
  proto.gooseai.ListEnginesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

<<<<<<< HEAD
=======

>>>>>>> 917d866 (test)
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gooseai.ListEnginesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.gooseai.ListEnginesRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

=======
proto.gooseai.ListEnginesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



>>>>>>> 917d866 (test)
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gooseai.Engines.repeatedFields_ = [1];

<<<<<<< HEAD
if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.gooseai.Engines.prototype.toObject = function (opt_includeInstance) {
    return proto.gooseai.Engines.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.gooseai.Engines} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.gooseai.Engines.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        engineList: jspb.Message.toObjectList(
          msg.getEngineList(),
          proto.gooseai.EngineInfo.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

=======


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gooseai.Engines.prototype.toObject = function(opt_includeInstance) {
  return proto.gooseai.Engines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gooseai.Engines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gooseai.Engines.toObject = function(includeInstance, msg) {
  var f, obj = {
    engineList: jspb.Message.toObjectList(msg.getEngineList(),
    proto.gooseai.EngineInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> 917d866 (test)
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gooseai.Engines}
 */
<<<<<<< HEAD
proto.gooseai.Engines.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.Engines();
  return proto.gooseai.Engines.deserializeBinaryFromReader(msg, reader);
};

=======
proto.gooseai.Engines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.Engines;
  return proto.gooseai.Engines.deserializeBinaryFromReader(msg, reader);
};


>>>>>>> 917d866 (test)
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gooseai.Engines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gooseai.Engines}
 */
<<<<<<< HEAD
proto.gooseai.Engines.deserializeBinaryFromReader = function (msg, reader) {
=======
proto.gooseai.Engines.deserializeBinaryFromReader = function(msg, reader) {
>>>>>>> 917d866 (test)
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
<<<<<<< HEAD
      case 1:
        var value = new proto.gooseai.EngineInfo();
        reader.readMessage(
          value,
          proto.gooseai.EngineInfo.deserializeBinaryFromReader
        );
        msg.addEngine(value);
        break;
      default:
        reader.skipField();
        break;
=======
    case 1:
      var value = new proto.gooseai.EngineInfo;
      reader.readMessage(value,proto.gooseai.EngineInfo.deserializeBinaryFromReader);
      msg.addEngine(value);
      break;
    default:
      reader.skipField();
      break;
>>>>>>> 917d866 (test)
    }
  }
  return msg;
};

<<<<<<< HEAD
=======

>>>>>>> 917d866 (test)
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.gooseai.Engines.prototype.serializeBinary = function () {
=======
proto.gooseai.Engines.prototype.serializeBinary = function() {
>>>>>>> 917d866 (test)
  var writer = new jspb.BinaryWriter();
  proto.gooseai.Engines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

<<<<<<< HEAD
=======

>>>>>>> 917d866 (test)
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gooseai.Engines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.gooseai.Engines.serializeBinaryToWriter = function (message, writer) {
=======
proto.gooseai.Engines.serializeBinaryToWriter = function(message, writer) {
>>>>>>> 917d866 (test)
  var f = undefined;
  f = message.getEngineList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gooseai.EngineInfo.serializeBinaryToWriter
    );
  }
};

<<<<<<< HEAD
=======

>>>>>>> 917d866 (test)
/**
 * repeated EngineInfo engine = 1;
 * @return {!Array<!proto.gooseai.EngineInfo>}
 */
<<<<<<< HEAD
proto.gooseai.Engines.prototype.getEngineList = function () {
  return /** @type{!Array<!proto.gooseai.EngineInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gooseai.EngineInfo, 1)
  );
};

/**
 * @param {!Array<!proto.gooseai.EngineInfo>} value
 * @return {!proto.gooseai.Engines} returns this
 */
proto.gooseai.Engines.prototype.setEngineList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

=======
proto.gooseai.Engines.prototype.getEngineList = function() {
  return /** @type{!Array<!proto.gooseai.EngineInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gooseai.EngineInfo, 1));
};


/**
 * @param {!Array<!proto.gooseai.EngineInfo>} value
 * @return {!proto.gooseai.Engines} returns this
*/
proto.gooseai.Engines.prototype.setEngineList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


>>>>>>> 917d866 (test)
/**
 * @param {!proto.gooseai.EngineInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gooseai.EngineInfo}
 */
<<<<<<< HEAD
proto.gooseai.Engines.prototype.addEngine = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.gooseai.EngineInfo,
    opt_index
  );
};

=======
proto.gooseai.Engines.prototype.addEngine = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gooseai.EngineInfo, opt_index);
};


>>>>>>> 917d866 (test)
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gooseai.Engines} returns this
 */
<<<<<<< HEAD
proto.gooseai.Engines.prototype.clearEngineList = function () {
  return this.setEngineList([]);
};

=======
proto.gooseai.Engines.prototype.clearEngineList = function() {
  return this.setEngineList([]);
};


>>>>>>> 917d866 (test)
/**
 * @enum {number}
 */
proto.gooseai.EngineType = {
  TEXT: 0,
  PICTURE: 1,
  AUDIO: 2,
  VIDEO: 3,
  CLASSIFICATION: 4,
<<<<<<< HEAD
  STORAGE: 5,
=======
  STORAGE: 5
>>>>>>> 917d866 (test)
};

/**
 * @enum {number}
 */
proto.gooseai.EngineTokenizer = {
  GPT2: 0,
<<<<<<< HEAD
  PILE: 1,
=======
  PILE: 1
>>>>>>> 917d866 (test)
};

goog.object.extend(exports, proto.gooseai);
